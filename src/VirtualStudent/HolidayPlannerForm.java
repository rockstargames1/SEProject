/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VirtualStudent;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author kishl_000
 */
public class HolidayPlannerForm extends javax.swing.JFrame {

    /**
     * Creates new form HolidayPlannerForm
     */
    DatabaseStudent db;
    String subjects[];
    int attended[];
    int total[];
    int perc[];

    
    public HolidayPlannerForm() {
        initComponents();
        setSize(720,500);
        this.setTitle("Virtual Student");
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        setResizable(false);
        backbutton.setIcon(new ImageIcon("C:\\Users\\kishl_000\\OneDrive\\Documents\\Images\\back_button.png"));
        db = new DatabaseStudent();
        subjects = new String[6];
        attended = new int[6];
        total = new int[6];
        perc = new int[6];
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        backbutton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Date (dd/MM/yyyy) :");
        jLabel1.setAutoscrolls(true);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3" }));

        jLabel2.setText("Days :");

        jButton1.setText("Check");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Expected Daily Expenditure:");

        backbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(69, 69, 69)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addComponent(jButton1)))))
                .addContainerGap(209, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(backbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(jButton1)
                .addContainerGap(138, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            getSubjectsAndAttendance();
            
                int budprblm = 0;
                int attdprblm = 0;
            
            ResultSet rs = null;
            
            switch(jComboBox1.getSelectedIndex())
            {
                case 0:                
                    rs = oneDayAttendanceCheck();
                    break;
                case 1:
                    rs = twoDayAttendanceCheck();
                    break;
                case 2:
                    rs =  threeDayAttendanceCheck();
            }
            int i = 0;
            System.out.println(rs);
            while(rs.next())
            {
                i = 0;
                while(i < 6)
                {
                    if(subjects[i].equals(rs.getString(1)))
                    {
                        total[i] = total[i] + rs.getInt(2);
                    }
                    i++;
                }
            }
            System.out.println(rs);
            i = 0;
            while(i < 6)
            {
                perc[i] = (attended[i] * 100)/(total[i]);
                i++;
            }
            
            System.out.println(perc[i-1]);
            
            int amt = ((Integer.parseInt(jTextField2.getText())) * (jComboBox1.getSelectedIndex()+1));
             
            if(amt >= 2000)
            {
                budprblm+=2;
            }
            i = 0;
            while(i < 6)
            {
                if(perc[i] < 75)
                    attdprblm+=1;
                i++;
            }
            
            int totprblm = budprblm + attdprblm;
            String verdict = "";
            if(totprblm == 0)
                    {
                        verdict = "Hurray!!You have enough attendance in all subjects.\n" +
                                    "Budget isnt a problem either.\n" +
                                        "You can afford this break.";
                       JOptionPane.showMessageDialog(rootPane, verdict);
                    }
            else if ((3 >= totprblm) && (totprblm > 0))
            {
                if(budprblm > 0)
                {
                        verdict = "Well!!You will have below 75 attendance in " +attdprblm+ " subjects if you make this trip.\n" +
                                    "Budget could be a problem\n" +
                                        "Its your call.";
                       JOptionPane.showMessageDialog(rootPane, verdict);              
                }
                else
                {
                    verdict = "Well!!You will have below 75 attendance in " +attdprblm+ " subjects if you make this trip.\n" +
                                    "Budget isnt going to be a problem.\n" +
                                        "Its your call.";
                       JOptionPane.showMessageDialog(rootPane, verdict);
                }
            }
            else
            {
                if(budprblm > 0)
                {
                        verdict = "Well!!You will have below 75 attendance in " +attdprblm+ " subjects.\n" +
                                    "Your budget is also tight\n" +
                                        "Trip not recommended.";
                       JOptionPane.showMessageDialog(rootPane, verdict);              
                }
                else
                {
                    verdict = "No Way!!\"Budget isnt going to be a problem but\n"
                            + "you will have below 75 attendance in " +attdprblm+ " subjects if you make the trip.\n" +     
                                        "You cant afford that.";
                       JOptionPane.showMessageDialog(rootPane, verdict);
                } 
            }
            
        } catch (SQLException ex) {
            System.err.println(ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void backbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbuttonActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            db = new DatabaseStudent();
            String sql = "select det_val from user_details where det_name='password'";
            System.out.println(sql);
            ResultSet rs = db.stmt.executeQuery(sql);
            rs.next();
            String x = rs.getString(1);
            db.closeConnections();
            HomePage form = new HomePage(x);
            this.setVisible(false);
            form.setVisible(true);
        } catch (SQLException ex) {
            System.err.println(ex);
        }
    }//GEN-LAST:event_backbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HolidayPlannerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HolidayPlannerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HolidayPlannerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HolidayPlannerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HolidayPlannerForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbutton;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    
    //3 day Holiday
    
    private ResultSet threeDayAttendanceCheck() {
        String pattern = "dd/mm/yyyy";
    SimpleDateFormat format = new SimpleDateFormat(pattern);
    try {
        
        //Set the Date
        
      Date date = format.parse(jTextField1.getText());
      System.out.println(date);
      Calendar cal = Calendar.getInstance();
      cal.setTime(date);
      
      //Set the sql command
      
      String sql = null;
      
      switch(cal.get(Calendar.DAY_OF_WEEK))
      {
          case Calendar.MONDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Monday','Tuesday','Wednesday')\n" +
                     "group by subject";
              break;
              
          case Calendar.TUESDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Tuesday','Wednesday','Thursday')\n" +
                     "group by subject";
              break;
              
          case Calendar.WEDNESDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Wednesday','Thursday','Friday')\n" +
                     "group by subject";
              break;
              
          case Calendar.THURSDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Thursday','Friday','Saturday')\n" +
                     "group by subject";
              break;
          
          case Calendar.FRIDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Friday','Saturday')\n" +
                     "group by subject";
              break;
              
          case Calendar.SATURDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Saturday','Monday')\n" +
                     "group by subject";
              break;
          
          case Calendar.SUNDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Monday','Tuesday')\n" +
                     "group by subject";
              break;    
      }
      System.out.println(sql);
      ResultSet rs = db.stmt.executeQuery(sql);
      System.out.println(rs);
      return rs;
    } catch (ParseException e) {
      System.err.println(e);
    }   catch (SQLException ex) {
            System.err.println(ex);
        }
    System.out.println("3");
    return null;
    }
    
    
    //For 2 day Holiday
    
    
    private ResultSet twoDayAttendanceCheck()
    {
        String pattern = "dd/mm/yyyy";
    SimpleDateFormat format = new SimpleDateFormat(pattern);
    try {
        
        //Set the Date
        
      Date date = format.parse(jTextField1.getText());
      System.out.println(date);
      Calendar cal = Calendar.getInstance();
      cal.setTime(date);
      
      //Set the sql command
      
      String sql = null;
      
      switch(cal.get(Calendar.DAY_OF_WEEK))
      {
          case Calendar.MONDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Monday','Tuesday')\n" +
                     "group by subject";
              break;
              
          case Calendar.TUESDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Tuesday','Wednesday')\n" +
                     "group by subject";
              break;
              
          case Calendar.WEDNESDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Wednesday','Thursday')\n" +
                     "group by subject";
              break;
              
          case Calendar.THURSDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Thursday','Friday')\n" +
                     "group by subject";
              break;
          
          case Calendar.FRIDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Friday','Saturday')\n" +
                     "group by subject";
              break;
              
          case Calendar.SATURDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Saturday')\n" +
                     "group by subject";
              break;
          
          case Calendar.SUNDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Monday')\n" +
                     "group by subject";
              break;    
      }
      System.out.println(sql);
      ResultSet rs = db.stmt.executeQuery(sql);
      System.out.println(rs);
      return rs;
    } catch (ParseException e) {
      System.err.println(e);
    }   catch (SQLException ex) {
            System.err.println(ex);
        }
    System.out.println("2");
    return null;
    }
    
    //For 1 day Holiday
    
    private ResultSet oneDayAttendanceCheck()
    {
        String pattern = "dd/mm/yyyy";
    SimpleDateFormat format = new SimpleDateFormat(pattern);
    try {
        
        //Set the Date
        
      Date date = format.parse(jTextField1.getText());
      System.out.println(date);
      Calendar cal = Calendar.getInstance();
      cal.setTime(date);
      
      //Set the sql command
      
      String sql = null;
      
      switch(cal.get(Calendar.DAY_OF_WEEK))
      {
          case Calendar.MONDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Monday')\n" +
                     "group by subject";
              break;
              
          case Calendar.TUESDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Tuesday')\n" +
                     "group by subject";
              break;
              
          case Calendar.WEDNESDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Wednesday')\n" +
                     "group by subject";
              break;
              
          case Calendar.THURSDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Thursday')\n" +
                     "group by subject";
              break;
          
          case Calendar.FRIDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Friday')\n" +
                     "group by subject";
              break;
              
          case Calendar.SATURDAY:
              sql = "select subject,count(*)\n" +
                     "from timetable\n" +
                     "where day in ('Saturday')\n" +
                     "group by subject";
              break;    
      }
      System.out.println(sql);
      ResultSet rs = db.stmt.executeQuery(sql);
      System.out.println(rs);
      return rs;
    } catch (ParseException e) {
      System.err.println(e);
    }   catch (SQLException ex) {
            System.err.println(ex);
        }
    System.out.println("1");
    return null;
    }

    private void getSubjectsAndAttendance() {
                int i=0;
        String sql = "select * from attendance;";
        try {
            System.out.println(sql);
           ResultSet rs = db.stmt.executeQuery(sql);
            while(rs.next())
            {
                subjects[i] = rs.getString(1);
                attended[i] = rs.getInt(2);
                total[i] = rs.getInt(3);
                i++;
            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }
    }
}
